// Generated by CoffeeScript 1.8.0
(function() {
  var WeixinCtrl, async, config, crypto, request;

  config = require("./../config/weixin.json");

  request = require("request");

  crypto = require("crypto");

  async = require("async");

  WeixinCtrl = (function() {
    function WeixinCtrl() {}

    WeixinCtrl.check = function(timestamp, nonce, signature) {
      var currSign, tmp;
      tmp = [config.token, timestamp, nonce].sort().join("");
      currSign = crypto.createHash("sha1").update(tmp).digest("hex");
      return currSign === signature;
    };

    WeixinCtrl.accessToken = function(fn) {
      var url;
      url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" + config.appID + "&secret=" + config.appSecret;
      return request({
        url: url,
        timeout: 3000
      }, function(err, response, body) {
        var res;
        if (err) {
          return fn(err);
        } else {
          res = body != null ? JSON.parse(body) : {};
          if (res.errcode != null) {
            return fn(new Error(res.errmsg));
          } else {
            res.startTime = Date.now();
            global.accessToken = res;
            return fn(null, res);
          }
        }
      });
    };

    WeixinCtrl.codeAccessToken = function(code, fn) {
      var url;
      url = "https://api.weixin.qq.com/sns/oauth2/access_token?grant_type=authorization_code&appid=" + config.appID + "&secret=" + config.appSecret + "&code=" + code;
      return request({
        url: url,
        timeout: 3000
      }, function(err, response, body) {
        var res;
        if (err) {
          return fn(err);
        } else {
          res = body != null ? JSON.parse(body) : {};
          if (res.errcode != null) {
            return fn(new Error(res.errmsg));
          } else {
            return fn(null, res);
          }
        }
      });
    };

    WeixinCtrl.jsapi = function(url, fn) {
      return async.auto({
        getTicket: function(cb) {
          if (global.jsticket && global.jsticket.startTime + (global.jsticket.expires_in * 1000) > Date.now()) {
            return cb(null, global.jsticket);
          } else {
            return WeixinCtrl.jsTicket(function(err, res) {
              return cb(err, res);
            });
          }
        },
        sign: [
          "getTicket", function(cb, results) {
            var createRamdomNonceStr, noncestr, shasum, signStr, signature, ticket, timestamp;
            createRamdomNonceStr = function() {
              var $chars, i, maxPos, noceStr, _i;
              $chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
              maxPos = $chars.length;
              noceStr = "";
              for (i = _i = 0; _i < 32; i = ++_i) {
                noceStr += $chars.charAt(Math.floor(Math.random() * maxPos));
              }
              return noceStr;
            };
            ticket = results.getTicket;
            noncestr = createRamdomNonceStr();
            timestamp = Math.floor(Date.now() / 1000);
            signStr = "jsapi_ticket=" + ticket.ticket + "&noncestr=" + noncestr + "&timestamp=" + timestamp + "&url=" + url;
            crypto = require("crypto");
            shasum = crypto.createHash("sha1");
            shasum.update(signStr);
            signature = shasum.digest("hex");
            return cb(null, {
              appId: config.appID,
              timestamp: timestamp,
              nonceStr: noncestr,
              signature: signature,
              jsApiList: ["checkJsApi", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "hideMenuItems", "showMenuItems", "hideAllNonBaseMenuItem", "showAllNonBaseMenuItem", "translateVoice", "startRecord", "stopRecord", "onRecordEnd", "playVoice", "pauseVoice", "stopVoice", "uploadVoice", "downloadVoice", "chooseImage", "previewImage", "uploadImage", "downloadImage", "getNetworkType", "openLocation", "getLocation", "hideOptionMenu", "showOptionMenu", "closeWindow", "scanQRCode", "chooseWXPay", "openProductSpecificView", "addCard", "chooseCard", "openCard"]
            });
          }
        ]
      }, function(err, results) {
        return fn(err, results.sign);
      });
    };

    WeixinCtrl.jsTicket = function(fn) {
      return async.auto({
        accessToken: function(cb) {
          if ((global.accessToken != null) && global.accessToken.startTime + (global.accessToken.expires_in * 1000) > Date.now()) {
            return cb(null, global.accessToken);
          } else {
            return WeixinCtrl.accessToken(function(err, res) {
              return cb(err, res);
            });
          }
        },
        ticket: [
          "accessToken", function(cb, results) {
            var at, url;
            at = results.accessToken.access_token;
            url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=" + at + "&type=jsapi";
            return request({
              url: url,
              timeout: 3000
            }, function(err, response, body) {
              var res;
              if (err) {
                return cb(err);
              } else {
                res = body != null ? JSON.parse(body) : {};
                if (res.errcode === !0) {
                  return cb(new Error(res.errmsg));
                } else {
                  return cb(null, res);
                }
              }
            });
          }
        ]
      }, function(err, results) {
        return fn(err, results.ticket);
      });
    };

    return WeixinCtrl;

  })();

  module.exports = WeixinCtrl;

}).call(this);
