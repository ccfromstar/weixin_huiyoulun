// Generated by CoffeeScript 1.8.0
(function() {
  var CommonsCtrl, MemberCtrl, ProductCtrl, WeixinCtrl, async;

  ProductCtrl = require("./../ctrl/productCtrl");

  CommonsCtrl = require("./../ctrl/commonsCtrl");

  MemberCtrl = require("./../ctrl/memberCtrl");

  WeixinCtrl = require("./../ctrl/weixinCtrl");

  async = require("async");

  exports.weixinLogin = function(req, res, next) {
    var code, openid, state;
    if (req.session.user != null) {
      return next();
    } else {
      openid = req.query.openid;
      code = req.query.code;
      if (code != null) {
        console.log("----------weixinLogin------------");
        state = req.query.state;
        return async.auto({
          getOpenid: function(cb) {
            return WeixinCtrl.codeAccessToken(code, function(err, result) {
              console.log("----------codeAccessToken------------");
              if (err != null) {
                return cb(err);
              } else if (result.errcode != null) {
                return cb(new Error(result.errmsg));
              } else {
                return cb(null, result);
              }
            });
          },
          autoLogin: [
            "getOpenid", function(cb, results) {
              openid = results.getOpenid.openid;
              return MemberCtrl.weixinLogin(openid, function(err, result) {
                console.log("----------autoLogin------------");
                console.log(err, result);
                return cb(err, result);
              });
            }
          ],
          getOptions: [
            "autoLogin", "getOpenid", function(cb, results) {
              var uid;
              openid = results.getOpenid.openid;
              uid = results.autoLogin.id;
              return MemberCtrl.getOption(uid, openid, function(err, result) {
                return cb(err, result);
              });
            }
          ]
        }, function(err, results) {
          var user;
          openid = results.getOpenid.openid;
          if (err == null) {
            user = results.getOptions;
            user.openid = openid;
            user.id = results.autoLogin.id;
            res.locals.user = user;
            req.session.user = user;
          }
          return next();
        });
      } else if (openid != null) {
        console.log("----------openid login------------");
        return async.auto({
          autoLogin: function(cb, results) {
            return MemberCtrl.weixinLogin(openid, function(err, result) {
              console.log("----------autoLogin------------");
              console.log(err, result);
              return cb(err, result);
            });
          },
          getOptions: [
            "autoLogin", function(cb, results) {
              var uid;
              uid = results.autoLogin.id;
              return MemberCtrl.getOption(uid, openid, function(err, result) {
                return cb(err, result);
              });
            }
          ]
        }, function(err, results) {
          var user;
          console.log(err, results);
          if (err == null) {
            user = results.getOptions;
            user.openid = openid;
            user.id = results.autoLogin.id;
            res.locals.user = user;
            req.session.user = user;
          }
          return next();
        });
      } else {
        return next();
      }
    }
  };

  exports.login = function(req, res) {
    var code, state;
    code = req.query.code;
    state = req.query.state;
    if (code != null) {
      return WeixinCtrl.codeAccessToken(code, function(err, result) {
        if (err) {
          return res.status(500).end();
        } else {
          return res.render("login", {
            openid: result.openid
          });
        }
      });
    } else {
      return res.render("login", {
        openid: ""
      });
    }
  };

  exports.setting = function(req, res) {
    var code, state;
    code = req.query.code;
    state = req.query.state;
    if (code) {
      return async.auto({
        getOpenid: function(cb) {
          return WeixinCtrl.codeAccessToken(code, function(err, result) {
            console.log("getOpenid", err, result);
            if (err != null) {
              return cb(err);
            } else if (result.errcode != null) {
              return cb(new Error(result.errmsg));
            } else {
              return cb(null, result);
            }
          });
        },
        autoLogin: [
          "getOpenid", function(cb, results) {
            var openid;
            openid = results.getOpenid.openid;
            return MemberCtrl.weixinLogin(openid, function(err, result) {
              console.log("autoLogin", err, result);
              return cb(err, result);
            });
          }
        ],
        getOptions: [
          "autoLogin", "getOpenid", function(cb, results) {
            var openid, uid;
            uid = results.autoLogin.id;
            openid = results.getOpenid.openid;
            return MemberCtrl.getOption(uid, openid, function(err, result) {
              return cb(err, result);
            });
          }
        ],
        weixin: function(cb) {
          var url;
          url = "http://" + req.hostname + req.url;
          return WeixinCtrl.jsapi(url, function(err, result) {
            console.log("weixin", err, result);
            return cb(err, result);
          });
        }
      }, function(err, results) {
        var openid, uid, user;
        if (err == null) {
          uid = results.autoLogin.id;
          user = results.getOptions;
          openid = results.getOpenid.openid;
          user.openid = openid;
          user.id = uid;
          res.locals.user = user;
          req.session.user = user;
        }
        return res.render("setting", {
          uid: uid,
          weixin: results.weixin,
          user: user,
          openid: openid
        });
      });
    } else {
      return res.render("setting", {
        uid: "",
        weixin: null,
        user: null,
        openid: null
      });
    }
  };

  exports.unbind = function(req, res) {
    var code, state;
    code = req.query.code;
    state = req.query.state;
    return async.auto({
      getOpenid: function(cb) {
        return WeixinCtrl.codeAccessToken(code, function(err, result) {
          return cb(err, result);
        });
      },
      weixin: function(cb) {
        var url;
        url = "http://" + req.hostname + req.url;
        return WeixinCtrl.jsapi(url, function(err, result) {
          return cb(err, result);
        });
      }
    }, function(err, results) {
      if (err) {
        return res.status(500).end();
      } else {
        return res.render("unbind", {
          weixin: results.weixin,
          openid: results.getOpenid.openid
        });
      }
    });
  };

  exports.doLogin = function(req, res) {
    var loginName, openid, password;
    loginName = req.body.loginName;
    password = req.body.password;
    openid = req.body.openid;
    return async.auto({
      autoLogin: function(cb, results) {
        return MemberCtrl.bindWeChat(loginName, password, openid, function(err, result) {
          return cb(err, result);
        });
      },
      getOptions: [
        "autoLogin", "getOpenid", function(cb, results) {
          var uid;
          uid = results.autoLogin.id;
          return MemberCtrl.getOption(uid, openid, function(err, result) {
            return cb(err, result);
          });
        }
      ]
    }, function(err, results) {
      var user;
      if (err == null) {
        user = results.getOptions;
        user.openid = openid;
        user.id = results.autoLogin.id;
        res.locals.user = user;
        req.session.user = user;
        return res.send("success");
      } else {
        return res.send(err.message);
      }
    });
  };

  exports.resetOption = function(req, res) {
    var openid, uid;
    uid = req.body.uid;
    openid = req.body.openid;
    return MemberCtrl.resetOption(uid, openid, function(err, result) {
      if (err == null) {
        return res.send("success");
      } else {
        return res.send(err.message);
      }
    });
  };

  exports.doSetting = function(req, res) {
    var company, name, tel, uid;
    company = req.body.company;
    name = req.body.name;
    tel = req.body.tel;
    uid = req.body.uid;
    return MemberCtrl.setOption(uid, company, name, tel, function(err, result) {
      if (err == null) {
        return res.send("success");
      } else {
        return res.send(err.message);
      }
    });
  };

  exports.doUnbind = function(req, res) {
    var openid;
    openid = req.body.openid;
    return MemberCtrl.unbindWeChat(openid, function(err, result) {
      if (err == null) {
        req.session.user = null;
        return res.send("success");
      } else {
        return res.send(err.message);
      }
    });
  };

  exports.checkLogin = function(req, res, next) {
    if (req.session.user != null) {
      return next();
    } else {
      return res.render("login");
    }
  };

  exports.index = function(req, res) {
    return async.auto({
      products: function(cb) {
        return ProductCtrl.productList(function(err, result) {
          return cb(err, result);
        });
      },
      weixin: function(cb) {
        var url;
        url = "http://" + req.hostname + req.url;
        return WeixinCtrl.jsapi(url, function(err, result) {
          return cb(err, result);
        });
      }
    }, function(err, results) {
      var r;
      console.log(results.products.productList);
      r = {};
      r.weixin = results.weixin;
      r.products = results.products.productList;
      return res.render("index", r);
    });
  };

  exports.search = function(req, res) {
    return async.auto({
      cruiseArea: function(cb) {
        return CommonsCtrl.cruiseArea(function(err, res) {
          return cb(err, res);
        });
      },
      travelLocation: function(cb) {
        return CommonsCtrl.travelLocation(function(err, res) {
          return cb(err, res);
        });
      },
      ship: function(cb) {
        return CommonsCtrl.ship(function(err, res) {
          return cb(err, res);
        });
      },
      productShip: function(cb) {
        return CommonsCtrl.productShip(function(err, res) {
          return cb(err, res);
        });
      }
    }, function(err, results) {
      return res.render("search", results);
    });
  };

  exports.searchReults = function(req, res) {
    var cruiseArea, cruiseCompanyId, departureLocation, shipId, startDate;
    startDate = req.body.startDate;
    cruiseArea = req.body.cruiseArea;
    departureLocation = req.body.travelLocation;
    cruiseCompanyId = req.body.cruiseCompanyId;
    shipId = req.body.shipId;
    return ProductCtrl.getSearchResult(startDate, cruiseArea, departureLocation, cruiseCompanyId, shipId, function(err, result) {
      return res.render("searchResult", {
        ships: result
      });
    });
  };

  exports.priceDetail = function(req, res) {
    var pid;
    pid = req.params.pid;
    return async.auto({
      detail: function(cb) {
        return ProductCtrl.productDetail(pid, function(err, result) {
          return cb(err, result);
        });
      },
      weixin: function(cb) {
        var url;
        url = "http://" + req.hostname + req.url;
        return WeixinCtrl.jsapi(url, function(err, result) {
          return cb(err, result);
        });
      }
    }, function(err, results) {
      var r;
      r = results.detail;
      r.weixin = results.weixin;
      return res.render("priceDetail", r);
    });
  };

  exports.detail = function(req, res) {
    var pid;
    pid = req.params.pid;
    return async.auto({
      detail: function(cb) {
        return ProductCtrl.productDetail(pid, function(err, result) {
          return cb(err, result);
        });
      },
      fee: function(cb) {
        return ProductCtrl.productFee(pid, function(err, result) {
          return cb(err, result);
        });
      },
      ship: [
        "detail", function(cb, results) {
          var detail;
          detail = results.detail;
          return ProductCtrl.shipInfo(detail.product.ship_id, function(err, result) {
            return cb(err, result);
          });
        }
      ],
      weixin: function(cb) {
        var url;
        url = "http://" + req.hostname + req.url;
        return WeixinCtrl.jsapi(url, function(err, result) {
          return cb(err, result);
        });
      }
    }, function(err, results) {
      var r;
      r = results.detail;
      r.fees = results.fee.fees;
      r.ship = results.ship;
      r.weixin = results.weixin;
      return res.render("prodInfo", r);
    });
  };

  exports.sendMsg = function(req, res) {
    var email, name, pid, sendtoid, tel;
    name = req.body.name;
    tel = req.body.tel;
    pid = req.body.pid;
    email = req.body.email;
    sendtoid = req.body.sendtoid;
    return ProductCtrl.sendMsg(name, tel, email, pid, sendtoid, function(err, result) {
      return res.send(result);
    });
  };

}).call(this);
